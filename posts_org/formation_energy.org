#+TITLE: A short story about formation energy

A few months ago I decided to learn more about the formation energy numbers
that appear on the website [[http://equilibrator.weizmann.ac.il/][eQuilibrator]]. I ended up learning a whole lot and
thought I'd write it down here. 

If you're coming to this topic for the first time, you may also want to check
out [[http://equilibrator.weizmann.ac.il/static/classic_rxns/about.html][eQuilibrator's documentation]] or cite:noorConsistentEstimationGibbs2013,
which are both very informative and readable guides to the scientific
background. I've aimed to add some more detail to give an idea of where
eQuilibrator's training data comes from and how it is transformed to take into
account experimental conditions.

* Background

The formation energy of a compound is the amount of energy that is stored or
released by the chemical reaction that creates it out of its constituent
elements. For example, according to [[https://en.wikipedia.org/wiki/Standard_Gibbs_free_energy_of_formation][Wikipedia]], liquid water has a formation
energy of -237.14 kilojoules per mole. This means that creating 1 mole of
liquid water out of gaseous hydrogen and oxygen stores 237.14 kilojoules of
energy from the surrounding environment.

I'm interested in formation energies because I want to model the rates of
metabolic reactions, which depend (among other things) on the thermodynamic
properties of the metabolites that they produce and consume. For example, the
compound ATP has a very low formation energy. Metabolism takes advantage of
this by using ATP to store energy and to drive reactions that would otherwise
be thermodynamically infeasible. Knowing the exact formation energy of a
metabolite can help us to find out if a genetic intervention like knocking out
a reaction or over-expressing an enzyme would help or hinder an organism's
metabolism.

Unfortunately it's not always straightforward to measure a compound's formation
energy. Metabolic networks involve lots of compounds, and not all of them have
been measured accurately. As a result, there is a lot to be gained by taking
advantage of scientific knowledge and statistical machinery, so as to make the
best possible use of the available information. Over the last decade or so, as
metabolic modelling has become more feasible and popular, there has been a
corresponding effort to develop improved methods for estimating formation
energies.

One of the most effective and, thanks to eQuilibrator well known, modelling
methods is called component contribution. This method was introduced in
cite:noorConsistentEstimationGibbs2013, and is implemented in a collection of
great publicly available [[https://gitlab.com/equilibrator/component-contribution/][python libraries]].

In what follows I'll try to explain where the training data for component
contribution comes from and how it is pre-processed to take into account
experimental conditions. I've written some original code to go with the text -
it can be found [[https://github.com/teddygroves/teddygroves.github.io/tree/master/src/formation_energy][here]]. To run it yourself you'll need a python 3 environment
with the following packages installed:

- [[https://gitlab.com/equilibrator/equilibrator-cache][equilibrator-cache]]
- [[https://gitlab.com/equilibrator/component-contribution][component-contribution]]
- [[https://pandas.pydata.org/][pandas]]
- [[https://numpy.org/][numpy]]
- [[https://www.scipy.org/][scipy]]

* Where does eQuilibrator's training data come from?
Equilibrator's training data consists of the following kinds of measurements:

- direct measurements of the energy change due to formation reactions
- measurements of the reduction potential change due to redox reactions 
- measurements of equilibrium constants (i.e. the ratio of substrate to product
  concentration at thermal equilibrium) of non-formation reactions

In addition eQuilibrator requires some supporting information:

- the stoichiometry of each measured reaction (i.e. the substrates and products
  and their relative proportions)
- each compound's decomposition into microspecies
- each microspecies's acid dissociation constants
- each compound's decomposition into chemical groups
- definitions of the chemical groups
  
This python script fetches the measurements and some supporting information and
saves them to csv files:

#+INCLUDE: "src/formation_energy/fetch_data.py" src python

Next we'll explore the different measurements in more detail.

** The tecrdb measurements

The measurements in ~tecrdb_measurements.csv~ originally come from [[https://randr.nist.gov/enzyme/][this
website]]. The researchers who compiled it scanned lots of papers like this

[[file:../img/citrate_synthase_measurements_paper.png]]

and put them in machine-readable form like this

[[file:../img/citrate_synthase_tecrdb.png]]

The measurements in the TECRDB record a quantity called the equilibrium
constant, or $K'$, which is the (experimental condition specific) ratio of
substrates to products when the measured reaction is at thermal
equilibrium. This quantity is related to the standard gibbs free energy of the
reaction, which in turn is related to the formation energies of the compounds
involved in the reaction.

Here is a graph showing the distribution of the raw $K'$ measurements for
different reactions, arraged according to each reaction's mean measured
value. Each measurement's colour represents the pH at which it was obtained.

[[file:../img/tecrdb_kprime.png]]

Looking at the colours, it is clear that, for many reactions, the darker, bluer
spots are on the left and the lighter, yellower spots are on the right. For
these reactions, the measured $K'$ values were higher when the experiment was
done at a higher pH. This illustrates the need to take into account
experimental conditions - we will later look at how equilibrator does this.

The relationship, at temperature $T$, between the condition-specific
equilibrium constant of a reaction $K'$ and the condition-sepcific gibbs free
energy change $\Delta_r G'^{o}$ is described by this equation:

$$
\Delta_r G'^{o} = -RT\ln(K')
$$

where $R$ is a physical constant (the universal gas constant).

Applying this transformation produces the following standard gibbs free energy
measurements:

[[file:../img/tecrdb_dgprime.png]]


** Formation energy measurements
The next source of relevant data are direct measurements of compound formation
energies, taken from cite:albertyThermodynamicsBiochemicalReactions2003 and
some other sources (see the column 'reference' in ~formation_measurements.csv~
for details). The measurements are of the are all recorded as having been taken
at the same pH and temperature.

Here is a plot of these formation energy measurements:

[[file:../img/formation_dgprime.png]]
 
The range of $\Delta_f G'^o$ values shown here is much greater than that of the
TECRDB $\Delta_r G'^o$ values plotted above. This is because of a technical
limitation that equilibrium constants can only be measured when $\Delta_r G'^o$
is close to zero.

** Redox reaction measurements
The table ~redox_measurements.csv~ records changes in reduction potential due
to redox reactions, where a compound gains an electron. For example,
cite:loach2010oxidation records NAD reduction, where the compound NAD(+) turns
into NADH by gaining an electron, as changing the reduction potential by -0.32
Volts per mole.

The reduction potential change $E'$ of a redox reaction is related to its
condition-specific gibbs free energy change $\Delta_r G'^{o}$ by the following
equation:

$$
\Delta_r G'^{o} = -F * E' * \Delta_e
$$

where $F$ is the Faraday constant and $\Delta_e$ is the total charge
transferred by the reaction, taking into account both movements of electrons
and hydrogen ions.

Here is a plot of the $\Delta_r G'^{o}$ values of the measured redox reactions.

[[file:../img/redox_dgprime.png]]

* How does eQuilibrator account for experimental conditions?
The component contribution method takes experimental conditions into account by
transforming the measured condition-specific gibbs free energy changes to
standard condition gibbs free energy changes using the method described in
cite:albertyThermodynamicsBiochemicalReactions2003. The transformed
standard-condition values are then used as inputs to a statistical model. 

This section outlines this pre-processing strategy, describes how eQuilibrator
implements it and illustrates the results of transfomation on the TECRDB
measurements.

** The procedure
For each measurement, the component contribution method obtains a
standard-condition gibbs free energy change $\Delta_r G^{o}$ corresponding to
the measured condition-specific value $\Delta_r G^{o}'$ using inverse Legendre
transformations, as described in
cite:albertyThermodynamicsBiochemicalReactions2003.

The relationship between the two quantities is as follows:

$$
\Delta_r G^{o} = \Delta_r G^{o}' - \frac{ddg}{RT} \cdot RT
$$

The $ddg/RT$ quantity in this equation is obtained by the following procedure:

    1. Find the standard condition $ddg/RT$ value for each microspecies in the
       reaction by inferring it from acid dissociation constants.

    2. Find the condition-specific $ddg/RT$ value for each microspecies in the
       reaction by adding the standard condition value to the legendre
       transform adjustment based on the conditions (pH, pMg, ionic strength
       and temperature) and the microspecies's number of protons, charge and
       number of magnesium atoms.

    3. Find each compound's $ddg/RT$ value by calculating the log-sum-exp of -1
       times the condition-specific $ddg/RT$ of each its component
       microspecies, then multiplying the result by -1.

    4. Find the reaction's $ddg/RT$ value by adding together the product of
       each compound's $ddg/RT$ value and its stoichiometric coeffient.

** How eQuilibrator implements the procedure
The code that is spread across two equilibrator packages: [[https://gitlab.com/equilibrator/equilibrator-assets][equilibrator-assets]]
and [[https://gitlab.com/equilibrator/equilibrator-cache][equilibrator-cache]]. The calculation of standard condition $ddg/RT$ values
for each microspecies, based on acid dissociation constants, is done [[https://gitlab.com/equilibrator/equilibrator-assets/-/blob/master/src/equilibrator_assets/chemaxon.py#L483][here]]. The
code for calculating the legendre transform for a microspecies at a condition
is [[https://gitlab.com/equilibrator/equilibrator-cache/blob/develop/src/equilibrator_cache/thermodynamic_constants.py][here]]. Condition-specific $ddg/RT$ for microspecies are calculated by a
method that belongs to the [[https://gitlab.com/equilibrator/equilibrator-cache/-/blob/develop/src/equilibrator_cache/models/compound_microspecies.py][CompoundMicrospecies]] object. Compound $ddg/RT$
values are calculated from microspecies in the [[https://gitlab.com/equilibrator/equilibrator-cache/-/blob/develop/src/equilibrator_cache/models/compound.py][Compound]] object, and reaction
$ddg/RT$ values in the [[https://gitlab.com/equilibrator/equilibrator-cache/-/blob/develop/src/equilibrator_cache/reaction.py][Reaction]] object.

To make clear how these calculations work together, and to make sure I
understood it myself, I made some python functions that give equivalent results
to eQuilibrator's preprocessing, but can all be viewed in the same place. A
script that uses the functions can be found [[https://github.com/teddygroves/teddygroves.github.io/blob/master/src/formation_energy/process_tecrdb.py][here]] - for the TECRDB measurements
the results seem to be the same.

#+INCLUDE: "src/formation_energy/legendre.py" src python

** What do the TECRDB measurements look like after preprocessing?
Here are the transformed, standard condition gibbs free energy changes for
the TECRDB measurements:

[[file:../img/tecrdb_standard_dg.png]]

The colors show the $ddg/RT$ value for each reaction, i.e. essentially the
difference between the untransformed and transformed values. It is clear from
the graph that the adjustments due to Legendre transforms are substantial.

** Discussion
Using inverse Legendre transforms to coerce the measurements to standard
conditions before modelling is better than naively using the $\Delta_r G^{o}'$
values - see the supplementary appendix S1 of
cite:noorConsistentEstimationGibbs2013 for a comparison of these two
alternatives. However, this method introduces several issues. First, any
uncertainty as to the dissociation constants used to infer each microspecies's
standard condition $ddg/RT$ value is ignored. Second, the experimental
conditions - particularly pMg and ionic strength - are not always recorded
accurately and are sometimes missing altogether. In order to maintain
reasonable coverage, the component contribution method imputes default values
where pMg (default value 14) or ionic strength (default value 0.25M) is
missing.

These issues could be addressed by accounting for them when modelling the
transformed data, for example by using a model that can assume different
(hopefully worse) accuracies for measurements where a default ionic strength or
pMg value was assumed. Alternatively, the dependency of measurements on
experimental conditions could be included in a model using forward Legendre
transforms rather than being addressed in pre-processing.


* References
